{"remainingRequest":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/thread-loader/dist/cjs.js!/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js!/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/rest_lib.js","dependencies":[{"path":"/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/rest_lib.js","mtime":1627026042243},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/cache-loader/dist/cjs.js","mtime":1622543821598},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/thread-loader/dist/cjs.js","mtime":1622543821656},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js","mtime":1609932570543},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js","mtime":1622543823631}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hYmFkYm95L0RvY3VtZW50cy93b3Jrcy95aXRhaWJveF93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJykuZGVmYXVsdDsKCnZhciBiYXNlVXJsS2V5ID0gImRiY2hhaW5fYmFzZV91cmwiOwp2YXIgZGVmYXVsdEJhc2VVcmwgPSAiL3JlbGF5IjsKdmFyIGJhc2VVcmwgPSAnaHR0cHM6Ly9jaGFpbi15dGJveC5kYmNoYWluLmNsb3VkL3JlbGF5JzsgLy8gdmFyIGJhc2VVcmwgPSAnaHR0cDovLzE5Mi4xNjguMC4xOC9yZWxheSc7CgpmdW5jdGlvbiBzZXRCYXNlVXJsKHVybCkgewogIC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGJhc2VVcmxLZXksIHVybCkKICBiYXNlVXJsID0gdXJsOwp9CgpmdW5jdGlvbiBnZXRCYXNlVXJsKCkgewogIGlmIChiYXNlVXJsICE9IG51bGwpIHsKICAgIHJldHVybiBiYXNlVXJsOwogIH0KCiAgYmFzZVVybCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGJhc2VVcmxLZXkpIHx8IGRlZmF1bHRCYXNlVXJsOwogIHJldHVybiBiYXNlVXJsOwp9CgpmdW5jdGlvbiBnZXRJcGZzVXJsKGNpZCkgewogIHZhciB1cmwgPSBnZXRCYXNlVXJsKCk7CgogIGlmICh1cmwuc2xpY2UoLTEpID09ICcvJykgewogICAgdXJsID0gdXJsICsgImlwZnMvIjsKICB9IGVsc2UgewogICAgdXJsID0gdXJsICsgIi9pcGZzLyI7CiAgfQoKICByZXR1cm4gdXJsICsgY2lkOwp9CgpmdW5jdGlvbiByZXN0R2V0KF94KSB7CiAgcmV0dXJuIF9yZXN0R2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9yZXN0R2V0KCkgewogIF9yZXN0R2V0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVybCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChnZXRCYXNlVXJsKCkgKyB1cmwpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX3Jlc3RHZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gcmVzdFBvc3QoX3gyLCBfeDMsIF94NCkgewogIHJldHVybiBfcmVzdFBvc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3Jlc3RQb3N0KCkgewogIF9yZXN0UG9zdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIodXJsLCBkYXRhLCBjb25maWcpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoZ2V0QmFzZVVybCgpICsgdXJsLCBkYXRhLCBjb25maWcpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CiAgcmV0dXJuIF9yZXN0UG9zdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgeyBnZXRCYXNlVXJsLCBzZXRCYXNlVXJsLCBnZXRJcGZzVXJsLCByZXN0R2V0LCByZXN0UG9zdCB9Ow=="},{"version":3,"sources":["/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/rest_lib.js"],"names":["axios","require","default","baseUrlKey","defaultBaseUrl","baseUrl","setBaseUrl","url","getBaseUrl","localStorage","getItem","getIpfsUrl","cid","slice","restGet","get","restPost","data","config","post"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,IAAMC,UAAU,GAAG,kBAAnB;AACA,IAAMC,cAAc,GAAG,QAAvB;AACA,IAAIC,OAAO,GAAG,yCAAd,C,CACA;;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB;AACAF,EAAAA,OAAO,GAAGE,GAAV;AACD;;AAED,SAASC,UAAT,GAAsB;AACpB,MAAIH,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAOA,OAAP;AACD;;AACDA,EAAAA,OAAO,GAAGI,YAAY,CAACC,OAAb,CAAqBP,UAArB,KAAoCC,cAA9C;AACA,SAAOC,OAAP;AACD;;AAED,SAASM,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIL,GAAG,GAAGC,UAAU,EAApB;;AACA,MAAID,GAAG,CAACM,KAAJ,CAAU,CAAC,CAAX,KAAiB,GAArB,EAA0B;AACxBN,IAAAA,GAAG,GAAGA,GAAG,GAAG,OAAZ;AACD,GAFD,MAEO;AACLA,IAAAA,GAAG,GAAGA,GAAG,GAAG,QAAZ;AACD;;AACD,SAAOA,GAAG,GAAGK,GAAb;AACD;;SAEcE,O;;;;;qEAAf,iBAAuBP,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeP,KAAK,CAACe,GAAN,CAAUP,UAAU,KAAKD,GAAzB,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAIeS,Q;;;;;sEAAf,kBAAwBT,GAAxB,EAA6BU,IAA7B,EAAmCC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACelB,KAAK,CAACmB,IAAN,CAAWX,UAAU,KAAKD,GAA1B,EAA+BU,IAA/B,EAAqCC,MAArC,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIA,SAASV,UAAT,EAAqBF,UAArB,EAAiCK,UAAjC,EAA6CG,OAA7C,EAAsDE,QAAtD","sourcesContent":["const axios = require('axios').default;\n\nconst baseUrlKey = \"dbchain_base_url\";\nconst defaultBaseUrl = \"/relay\";\nvar baseUrl = 'https://chain-ytbox.dbchain.cloud/relay';\n// var baseUrl = 'http://192.168.0.18/relay';\nfunction setBaseUrl(url) {\n  // localStorage.setItem(baseUrlKey, url)\n  baseUrl = url\n}\n\nfunction getBaseUrl() {\n  if (baseUrl != null) {\n    return baseUrl\n  }\n  baseUrl = localStorage.getItem(baseUrlKey) || defaultBaseUrl\n  return baseUrl\n}\n\nfunction getIpfsUrl(cid) {\n  var url = getBaseUrl()\n  if (url.slice(-1) == '/') {\n    url = url + \"ipfs/\"\n  } else {\n    url = url + \"/ipfs/\"\n  }\n  return url + cid\n}\n\nasync function restGet(url) {\n  return await axios.get(getBaseUrl() + url)\n}\n\nasync function restPost(url, data, config) {\n  return await axios.post(getBaseUrl() + url, data, config)\n}\n\nexport { getBaseUrl, setBaseUrl, getIpfsUrl, restGet, restPost }\n"]}]}
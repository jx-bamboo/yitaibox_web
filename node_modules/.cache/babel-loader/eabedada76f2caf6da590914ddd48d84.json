{"remainingRequest":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js!/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/querier.js","dependencies":[{"path":"/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/querier.js","mtime":1627026042242},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/cache-loader/dist/cjs.js","mtime":1622543821598},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js","mtime":1609932570543},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js","mtime":1622543823631}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hYmFkYm95L0RvY3VtZW50cy93b3Jrcy95aXRhaWJveF93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9hYmFkYm95L0RvY3VtZW50cy93b3Jrcy95aXRhaWJveF93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvYWJhZGJveS9Eb2N1bWVudHMvd29ya3MveWl0YWlib3hfd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5nZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0IHsgcXVlcmllciB9IGZyb20gJy4vcmVzdF9jbGllbnQnOwppbXBvcnQgeyBnZXRBZGRyZXNzIH0gZnJvbSAnLi9rZXlfbWFuYWdlcic7CnZhciBoYW5kbGVyID0gewogIGdldDogZnVuY3Rpb24gZ2V0KHRhcmdldCwgcHJvcCkgewogICAgc3dpdGNoIChwcm9wKSB7CiAgICAgIGNhc2UgJ3RhYmxlJzoKICAgICAgY2FzZSAnYXBwQ29kZSc6CiAgICAgIGNhc2UgJ2NvbW1hbmRzJzoKICAgICAgY2FzZSAnZmluZCc6CiAgICAgIGNhc2UgJ2VxdWFsJzoKICAgICAgY2FzZSAnd2hlcmUnOgogICAgICBjYXNlICdvcmRlcic6CiAgICAgIGNhc2UgJ2NvbXBhcmVBbGwnOgogICAgICBjYXNlICdzZWxlY3QnOgogICAgICBjYXNlICdmaW5kRmlyc3QnOgogICAgICBjYXNlICdmaW5kTGFzdCc6CiAgICAgIGNhc2UgJ3NpbmdsZVZhbHVlJzoKICAgICAgY2FzZSAndmFsJzoKICAgICAgY2FzZSAncHJveHlLZWVwZXInOgogICAgICBjYXNlICdwYWdlJzoKICAgICAgICByZXR1cm4gUmVmbGVjdC5nZXQuYXBwbHkoUmVmbGVjdCwgYXJndW1lbnRzKTsKCiAgICAgIGNhc2UgJ293bic6CiAgICAgICAgdGFyZ2V0Lm93bkFkZHJlc3MoKTsKICAgICAgICByZXR1cm4gdGFyZ2V0LnByb3h5S2VlcGVyOwoKICAgICAgY2FzZSAnZmlyc3QnOgogICAgICAgIHRhcmdldC5maW5kRmlyc3QoKTsKICAgICAgICByZXR1cm4gdGFyZ2V0LnByb3h5S2VlcGVyOwoKICAgICAgY2FzZSAnbGFzdCc6CiAgICAgICAgdGFyZ2V0LmZpbmRMYXN0KCk7CiAgICAgICAgcmV0dXJuIHRhcmdldC5wcm94eUtlZXBlcjsKCiAgICAgIGNhc2UgJ2NvdW50JzoKICAgICAgICB0YXJnZXQuY291bnQoKTsKICAgICAgICByZXR1cm4gdGFyZ2V0LnByb3h5S2VlcGVyOwoKICAgICAgZGVmYXVsdDoKICAgICAgICB0YXJnZXQudGFibGUocHJvcCk7CiAgICAgICAgcmV0dXJuIHRhcmdldC5wcm94eUtlZXBlcjsKICAgIH0KICB9Cn07CgpmdW5jdGlvbiBRdWVyaWVyKGFwcENvZGUpIHsKICB2YXIgcSA9IG5ldyBJbnRlcm5hbFF1ZXJpZXIoYXBwQ29kZSk7CiAgdmFyIHByb3h5ID0gbmV3IFByb3h5KHEsIGhhbmRsZXIpOwogIHEucHJveHlLZWVwZXIgPSBwcm94eTsKICByZXR1cm4gcHJveHk7Cn0KCnZhciBJbnRlcm5hbFF1ZXJpZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEludGVybmFsUXVlcmllcihhcHBDb2RlKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW50ZXJuYWxRdWVyaWVyKTsKCiAgICB0aGlzLmFwcENvZGUgPSBhcHBDb2RlOwogICAgdGhpcy5jb21tYW5kcyA9IFtdOwogICAgdGhpcy5zaW5nbGVWYWx1ZSA9IGZhbHNlOwogICAgdGhpcy5wcm94eUtlZXBlciA9IG51bGw7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSW50ZXJuYWxRdWVyaWVyLCBbewogICAga2V5OiAidGFibGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHRhYmxlKHRhYmxlTmFtZSkgewogICAgICB0aGlzLnNpbmdsZVZhbHVlID0gZmFsc2U7CiAgICAgIHRoaXMuY29tbWFuZHMucHVzaCh7CiAgICAgICAgbWV0aG9kOiAidGFibGUiLAogICAgICAgIHRhYmxlOiB0YWJsZU5hbWUKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLnByb3h5S2VlcGVyOwogICAgfQogIH0sIHsKICAgIGtleTogImZpbmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmQoaWQpIHsKICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKHsKICAgICAgICBtZXRob2Q6ICJmaW5kIiwKICAgICAgICBpZDogaWQKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLnByb3h5S2VlcGVyOwogICAgfQogIH0sIHsKICAgIGtleTogInNlbGVjdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VsZWN0KCkgewogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICB0aGlzLmNvbW1hbmRzLnB1c2goewogICAgICAgIG1ldGhvZDogInNlbGVjdCIsCiAgICAgICAgZmllbGRzOiBhcmdzLmpvaW4oKQogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMucHJveHlLZWVwZXI7CiAgICB9CiAgfSwgewogICAga2V5OiAib3duQWRkcmVzcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3duQWRkcmVzcygpIHsKICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKHsKICAgICAgICBtZXRob2Q6ICJ3aGVyZSIsCiAgICAgICAgZmllbGQ6ICJjcmVhdGVkX2J5IiwKICAgICAgICB2YWx1ZTogZ2V0QWRkcmVzcygpLAogICAgICAgIG9wZXJhdG9yOiAnPScKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLnByb3h5S2VlcGVyOwogICAgfQogIH0sIHsKICAgIGtleTogImVxdWFsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlcXVhbChmaWVsZE5hbWUsIHZhbHVlKSB7CiAgICAgIHRoaXMuY29tbWFuZHMucHVzaCh7CiAgICAgICAgbWV0aG9kOiAid2hlcmUiLAogICAgICAgIGZpZWxkOiBmaWVsZE5hbWUsCiAgICAgICAgdmFsdWU6IHZhbHVlLAogICAgICAgIG9wZXJhdG9yOiAnPScKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLnByb3h5S2VlcGVyOwogICAgfQogICAgLyoqCiAgICAgKiAKICAgICAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZE5hbWUgVGhlIG5hbWUgb2YgdGhlIGZpZWxkIHRvIHF1ZXJ5CiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBmaWVsZCB0byBxdWVyeQogICAgICogQHBhcmFtIHtTdHJpbmd9IHN5bWJvbCBUaGUgY29udHJhc3Qgc3ltYm9sIHRvIHF1ZXJ5LiAgKCc+JywnPj0nLCc9JywnPCcsJzw9Jywn4omgJykKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJ3aGVyZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gd2hlcmUoZmllbGROYW1lLCB2YWx1ZSwgb3BlcmF0b3IpIHsKICAgICAgdmFyIG9iaiA9IHsKICAgICAgICBtZXRob2Q6ICJ3aGVyZSIsCiAgICAgICAgZmllbGQ6IGZpZWxkTmFtZSwKICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgb3BlcmF0b3I6IG9wZXJhdG9yCiAgICAgIH07CiAgICAgIHRoaXMuY29tbWFuZHMucHVzaChvYmopOwogICAgICByZXR1cm4gdGhpcy5wcm94eUtlZXBlcjsKICAgIH0KICAgIC8qKiAKICAgICAqIEJhdGNoLWFkZCBhcnJheSBvYmplY3QgcGFyYW1ldGVycyBhcmUgdXNlZCB3aGVuIGJhdGNoLWFkZCBzZWFyY2ggY3JpdGVyaWEKICAgICAqIEBwYXJhbSB7QXJyYXl9IHZhbHVlIEJhdGNoIGFkZCBhcnJheSBvYmplY3QgcGFyYW1ldGVycywgd2hvc2UgZm9ybWF0IGlzIFtbJ25hbWUxJywndmFsdWUxJ10sWyduYW1lMicsJ3ZhbHVlMicsJz4nXSwuLi5dCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiY29tcGFyZUFsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcGFyZUFsbCgpIHsKICAgICAgdmFyIHZhbHVlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbWycnLCAnJywgJyddXTsKICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuICLmoLzlvI/mnInor68iOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBlbGVtZW50ID0gdmFsdWVbaV07CiAgICAgICAgaWYgKCFlbGVtZW50WzBdIHx8ICFlbGVtZW50WzFdKSBjb250aW51ZTsKICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgbWV0aG9kOiAnd2hlcmUnLAogICAgICAgICAgZmllbGQ6IGVsZW1lbnRbMF0sCiAgICAgICAgICB2YWx1ZTogZWxlbWVudFsxXSwKICAgICAgICAgIG9wZXJhdG9yOiBlbGVtZW50WzJdID8gZWxlbWVudFsyXSA6ICc9JwogICAgICAgIH07CiAgICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKG9iaik7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnByb3h5S2VlcGVyOwogICAgfQogIH0sIHsKICAgIGtleTogIm9yZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvcmRlcihmaWVsZE5hbWUpIHsKICAgICAgdmFyIGRpcmVjdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogImFzYyI7CgogICAgICBpZiAoZGlyZWN0aW9uICE9ICJhc2MiICYmIGRpcmVjdGlvbiAhPSAiZGVzYyIpIHsKICAgICAgICByZXR1cm4gdGhpcy5wcm94eUtlZXBlcjsKICAgICAgfQoKICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKHsKICAgICAgICBtZXRob2Q6ICJvcmRlciIsCiAgICAgICAgZmllbGQ6IGZpZWxkTmFtZSwKICAgICAgICBkaXJlY3Rpb246IGRpcmVjdGlvbgogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMucHJveHlLZWVwZXI7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmluZEZpcnN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmaW5kRmlyc3QoKSB7CiAgICAgIHRoaXMuc2luZ2xlVmFsdWUgPSB0cnVlOwogICAgICB0aGlzLmNvbW1hbmRzLnB1c2goewogICAgICAgIG1ldGhvZDogImZpcnN0IgogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMucHJveHlLZWVwZXI7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmluZExhc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmRMYXN0KCkgewogICAgICAvL3RoaXMuc2luZ2xlVmFsdWUgPSB0cnVlOwogICAgICB0aGlzLmNvbW1hbmRzLnB1c2goewogICAgICAgIG1ldGhvZDogImxhc3QiCiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5wcm94eUtlZXBlcjsKICAgIH0KICAgIC8qKgogICAgICogVG90YWwgbnVtYmVyIG9mIGRhdGEgYWNxdWlyZWQKICAgICAqIEByZXR1cm5zIHtjb3VudDogIjIxMjIwIn0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY291bnQoKSB7CiAgICAgIHRoaXMuY29tbWFuZHMucHVzaCh7CiAgICAgICAgbWV0aG9kOiAiY291bnQiCiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5wcm94eUtlZXBlcjsKICAgIH0KICAgIC8qKgogICAgICogcGFnaW5nIHF1ZXJ5CiAgICAgKiBRdWVyeSBmb3IgYSBzcGVjaWZpZWQgYW1vdW50IG9mIGRhdGEgdW5kZXIgdGhlIHNwZWNpZmllZCBwYWdlCiAgICAgKiBAcGFyYW0ge051bWJlcn0gcGFnZSAKICAgICAqIEBwYXJhbSB7TnVtYmVyfSBzaXplIAogICAgICogQHJldHVybnMgW3tpZDoxLC4uLn0se2lkOjIsLi4ufS4uLl0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJwYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwYWdlKF9wYWdlLCBzaXplKSB7CiAgICAgIHZhciBvZmZzZXQgPSAoX3BhZ2UgLSAxKSAqIHNpemUgPCAwID8gMCA6IChfcGFnZSAtIDEpICogc2l6ZTsKICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKHsKICAgICAgICBtZXRob2Q6ICJvZmZzZXQiLAogICAgICAgIHZhbHVlOiBvZmZzZXQgKyAnJwogICAgICB9KTsKICAgICAgdGhpcy5jb21tYW5kcy5wdXNoKHsKICAgICAgICBtZXRob2Q6ICJsaW1pdCIsCiAgICAgICAgdmFsdWU6IHNpemUgKyAnJwogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMucHJveHlLZWVwZXI7CiAgICB9CiAgfSwgewogICAga2V5OiAidmFsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdmFsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcXVlcmllcih0aGlzLmFwcENvZGUsIHRoaXMuY29tbWFuZHMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3VsdC5sZW5ndGggPiAwICYmIHRoaXMuc2luZ2xlVmFsdWUpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRbMF0pOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gdmFsKCkgewogICAgICAgIHJldHVybiBfdmFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB2YWw7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBJbnRlcm5hbFF1ZXJpZXI7Cn0oKTsKCmV4cG9ydCB7IFF1ZXJpZXIgfTs="},{"version":3,"sources":["/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/querier.js"],"names":["querier","getAddress","handler","get","target","prop","Reflect","arguments","ownAddress","proxyKeeper","findFirst","findLast","count","table","Querier","appCode","q","InternalQuerier","proxy","Proxy","commands","singleValue","tableName","push","method","id","args","fields","join","field","value","operator","fieldName","obj","Array","isArray","i","length","element","direction","page","size","offset","result"],"mappings":"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","sourcesContent":["import { querier } from './rest_client'\nimport { getAddress } from './key_manager'\n\nconst handler = {\n  get: function(target, prop) {\n    switch(prop) {\n      case 'table':\n      case 'appCode':\n      case 'commands':\n      case 'find':\n      case 'equal':\n      case 'where':\n      case 'order':\n      case 'compareAll':\n      case 'select':\n      case 'findFirst':\n      case 'findLast':\n      case 'singleValue':\n      case 'val':\n      case 'proxyKeeper':\n      case 'page':\n        return Reflect.get(...arguments);\n      case 'own':\n        target.ownAddress();\n        return target.proxyKeeper\n      case 'first':\n        target.findFirst();\n        return target.proxyKeeper\n      case 'last':\n        target.findLast();\n        return target.proxyKeeper\n      case 'count':\n        target.count();\n        return target.proxyKeeper\n      default:\n        target.table(prop);\n        return target.proxyKeeper\n    }\n  }\n};\n\nfunction Querier(appCode) {\n  var q = new InternalQuerier(appCode);\n  var proxy = new Proxy(q, handler);\n  q.proxyKeeper = proxy;\n  return proxy\n}\n\nclass InternalQuerier {\n  constructor (appCode) {\n    this.appCode = appCode;\n    this.commands = [];\n    this.singleValue = false;\n    this.proxyKeeper = null;\n  }\n\n  table(tableName) {\n    this.singleValue = false;\n    this.commands.push({\n      method: \"table\",\n      table: tableName\n    });\n    return this.proxyKeeper;\n  }\n\n  find(id) {\n    this.commands.push({\n      method: \"find\",\n      id: id\n    });\n    return this.proxyKeeper;\n  }\n\n  select(...args) {\n    this.commands.push({\n      method: \"select\",\n      fields: args.join()\n    });\n    return this.proxyKeeper;\n  }\n\n  ownAddress() {\n    this.commands.push({\n      method: \"where\",\n      field: \"created_by\",\n      value: getAddress(),\n      operator: '='\n    });\n    return this.proxyKeeper;\n  }\n\n  equal(fieldName, value) {\n    this.commands.push({\n      method: \"where\",\n      field: fieldName,\n      value: value,\n      operator: '='\n    });\n    return this.proxyKeeper;\n  }\n  \n  /**\n   * \n   * @param {String} fieldName The name of the field to query\n   * @param {String} value The value of the field to query\n   * @param {String} symbol The contrast symbol to query.  ('>','>=','=','<','<=','≠')\n   */\n  where(fieldName, value, operator) {\n    let obj = {\n      method: \"where\",\n      field: fieldName,\n      value: value,\n      operator: operator\n    }\n    this.commands.push(obj);\n    return this.proxyKeeper;\n  }\n\n  /** \n   * Batch-add array object parameters are used when batch-add search criteria\n   * @param {Array} value Batch add array object parameters, whose format is [['name1','value1'],['name2','value2','>'],...]\n   */\n  compareAll(value = [['', '', '']]){\n    if (!Array.isArray(value)) return \"格式有误\"\n    for (let i = 0; i < value.length; i++) {\n      const element = value[i];\n      if (!element[0] || !element[1]) continue;\n      let obj = {\n        method: 'where',\n        field: element[0],\n        value: element[1],\n        operator: element[2] ? element[2] : '='\n      };\n      this.commands.push(obj);\n    }\n    return this.proxyKeeper;\n  }\n\n  order(fieldName, direction=\"asc\") {\n    if (direction != \"asc\" && direction != \"desc\" ) {\n        return this.proxyKeeper;\n    }\n    this.commands.push({\n      method: \"order\",\n      field: fieldName,\n      direction: direction\n    });\n    return this.proxyKeeper;\n  }\n\n  findFirst() {\n    this.singleValue = true;\n    this.commands.push({\n      method: \"first\",\n    });\n    return this.proxyKeeper;\n  }\n\n  findLast() {\n    //this.singleValue = true;\n    this.commands.push({\n      method: \"last\",\n    });\n    return this.proxyKeeper;\n  }\n  /**\n   * Total number of data acquired\n   * @returns {count: \"21220\"}\n   */\n  count() {\n    this.commands.push({\n      method: \"count\",\n    })\n    return this.proxyKeeper;\n  }\n\n  /**\n   * paging query\n   * Query for a specified amount of data under the specified page\n   * @param {Number} page \n   * @param {Number} size \n   * @returns [{id:1,...},{id:2,...}...]\n   */\n   page(page, size) {\n    let offset = (page - 1) * size < 0 ? 0 : (page - 1) * size;\n    this.commands.push({\n      method: \"offset\",\n      value: offset + ''\n    })\n    this.commands.push({\n      method: \"limit\",\n      value: size + ''\n    })\n    return this.proxyKeeper;\n  }\n  async val() {\n    var result = await querier(this.appCode, this.commands);\n    if (result.length > 0 && this.singleValue) {\n        return result[0]\n    } else {\n        return result ;\n    }\n  }\n}\n\nexport { Querier };\n"]}]}
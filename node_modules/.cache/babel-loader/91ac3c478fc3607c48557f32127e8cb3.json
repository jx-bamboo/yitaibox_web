{"remainingRequest":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/thread-loader/dist/cjs.js!/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js!/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/cosmos_sig/constants.js","dependencies":[{"path":"/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/cosmos_sig/constants.js","mtime":1627026042241},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/cache-loader/dist/cjs.js","mtime":1622543821598},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/thread-loader/dist/cjs.js","mtime":1622543821656},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/babel-loader/lib/index.js","mtime":1609932570543},{"path":"/Users/abadboy/Documents/works/yitaibox_web/node_modules/eslint-loader/index.js","mtime":1622543823631}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEJlY2gzMiBwcmVmaXggZm9yIENvc21vcyBhZGRyZXNzZXMuCiAqLwpleHBvcnQgdmFyIENPU01PU19QUkVGSVggPSAnY29zbW9zJzsKLyoqCiAqIEJJUDMyIGRlcml2YXRpb24gcGF0aCBmb3IgQ29zbW9zIGtleXMuCiAqLwovLyBAZm9ybWF0dGVyOm9mZgoKZXhwb3J0IHZhciBDT1NNT1NfUEFUSCA9ICJtLzQ0Jy8xMTgnLzAnLzAvMCI7IC8vIEBmb3JtYXR0ZXI6b24KCi8qKgogKiBEZWZpbmVzIGEgdHJhbnNhY3Rpb24gYnJvYWRjYXN0IG1vZGUgd2hlcmUgdGhlIGNsaWVudCByZXR1cm5zIGltbWVkaWF0ZWx5LgogKi8KCmV4cG9ydCB2YXIgQlJPQURDQVNUX01PREVfU1lOQyA9ICdzeW5jJzsKLyoqCiAqIERlZmluZXMgYSB0cmFuc2FjdGlvbiBicm9hZGNhc3QgbW9kZSB3aGVyZSB0aGUgY2xpZW50IHdhaXRzIGZvciBhIGBDaGVja1R4YCBleGVjdXRpb24gcmVzcG9uc2Ugb25seS4KICovCgpleHBvcnQgdmFyIEJST0FEQ0FTVF9NT0RFX0FTWU5DID0gJ2FzeW5jJzsKLyoqCiAqIERlZmluZXMgYSB0cmFuc2FjdGlvbiBicm9hZGNhc3QgbW9kZSB3aGVyZSB0aGUgY2xpZW50IHdhaXRzIGZvciB0aGUgdHJhbnNhY3Rpb24gdG8gYmUgY29tbWl0dGVkIGluIGEgYmxvY2suCiAqLwoKZXhwb3J0IHZhciBCUk9BRENBU1RfTU9ERV9CTE9DSyA9ICdibG9jayc7"},{"version":3,"sources":["/Users/abadboy/Documents/works/yitaibox_web/src/dbchain-js-client/src/cosmos_sig/constants.js"],"names":["COSMOS_PREFIX","COSMOS_PATH","BROADCAST_MODE_SYNC","BROADCAST_MODE_ASYNC","BROADCAST_MODE_BLOCK"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAMA,aAAa,GAAG,QAAtB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG,mBAApB,C,CACP;;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,mBAAmB,GAAG,MAA5B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,oBAAoB,GAAG,OAA7B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,oBAAoB,GAAG,OAA7B","sourcesContent":["/**\n * Bech32 prefix for Cosmos addresses.\n */\nexport const COSMOS_PREFIX = 'cosmos';\n\n/**\n * BIP32 derivation path for Cosmos keys.\n */\n// @formatter:off\nexport const COSMOS_PATH = \"m/44'/118'/0'/0/0\";\n// @formatter:on\n\n/**\n * Defines a transaction broadcast mode where the client returns immediately.\n */\nexport const BROADCAST_MODE_SYNC = 'sync';\n\n/**\n * Defines a transaction broadcast mode where the client waits for a `CheckTx` execution response only.\n */\nexport const BROADCAST_MODE_ASYNC = 'async';\n\n/**\n * Defines a transaction broadcast mode where the client waits for the transaction to be committed in a block.\n */\nexport const BROADCAST_MODE_BLOCK = 'block';\n"]}]}